CURRENT STATE
-------------
These work, so there are no SSL trust issues:
- https://web.mycluster.com
- https://api.mycluster.com
- https://tokenhandler.mycluster.com

But there are problems with large cookies and HTTP server limits.

FIX BROKEN SPA
--------------
Learn how to set these values for the Kong ingress controller:

#annotations:
  #  kubernetes.io/ingress.class: 'nginx'
  #  nginx.ingress.kubernetes.io/secure-backends: 'true'
  #  nginx.ingress.kubernetes.io/backend-protocol: 'HTTPS'
  #  nginx.ingress.kubernetes.io/proxy-buffering: 'on'
  #  nginx.ingress.kubernetes.io/proxy-buffer-size: '64k'
  #  nginx.ingress.kubernetes.io/proxy-buffers-number: '16'

These relate to the following environment variables being set in the Kong API gateway:

KONG_NGINX_PROXY_PROXY_BUFFER_SIZE: '16k'
KONG_NGINX_PROXY_PROXY_BUFFERS: '8 16k'
KONG_NGINX_PROXY_LARGE_CLIENT_HEADER_BUFFERS: '8 16k'

Set the smallest that works, to get up and running again.




Web Host SSL works
Do the same for APIs and Token Handler Docker
System will work with 

ENVIRONMENT VARIABLES
---------------------
KONG_SSL_TRUSTED_CERTIFICATE is the setting to supply in a Helm chart

KONG_DATABASE: 'off'
KONG_DECLARATIVE_CONFIG: '/usr/local/kong/declarative/kong.yml'
KONG_PROXY_LISTEN: '0.0.0.0:8100 ssl'
KONG_SSL_CERT_KEY: '/etc/secrets/certs/tls.key'
KONG_SSL_CERT: '/etc/secrets/certs/tls.crt'
KONG_SSL_TRUSTED_CERTIFICATE: '/etc/secrets/certs/ca.crt'
KONG_LUA_SSL_TRUSTED_CERTIFICATE: '/etc/secrets/certs/ca.crt'
KONG_LOG_LEVEL: 'info'
KONG_NGINX_PROXY_PROXY_BUFFER_SIZE: '16k'
KONG_NGINX_PROXY_PROXY_BUFFERS: '8 16k'
KONG_NGINX_PROXY_LARGE_CLIENT_HEADER_BUFFERS: '8 16k'
KONG_PLUGINS: 'bundled,oauth-proxy'

This might be useful:
https://stackoverflow.com/questions/71383782/kong-gke-ingress-an-invalid-response-was-received-from-the-upstream-server

TOP LEVEL COMMAND
-----------------
helm repo add kong https://charts.konghq.com
helm repo update
helm install kong  kong/kong --values helm-values.yaml --namespace kong --create-namespace

HELM VALUES
-----------
image:
  repository: curity/kong-custom
  tag: "2.8.1-alpine"

proxy:
  enabled: true
  type: LoadBalancer

ingressController:
  enabled: true
  installCRDs: false
  ingressClass: kong
  ingressClassAnnotations: {}
  rbac:
    create: true

# Temporary workaround: disable HTTP2 on admin endpoint
# https://github.com/Kong/kubernetes-ingress-controller/issues/2435
admin:
  tls:
    parameters: []

env:
  database: "off"
  LOG_LEVEL: "error"
  plugins: 'bundled,phantom-token' 

DOCKERFILE
----------
FROM kong:2.8.1-alpine

# Fetch from luarocks, and set git options if required
USER root
RUN git config --global url."https://".insteadOf git:// && \
    git config --global advice.detachedHead false && \
    luarocks install kong-phantom-token

USER kong

CRD
---
apiVersion: configuration.konghq.com/v1
kind: KongPlugin
metadata:
  name: phantom-token
config:
  introspection_endpoint: http://curity-idsvr-runtime-svc.$idsvr_namespace.svc.cluster.local:8443/oauth/v2/oauth-introspect # k8s cluster internal URL
  client_id: api-gateway-client
  client_secret: Password123
  token_cache_seconds: 900
  scope: read
plugin: phantom-token